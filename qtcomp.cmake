set(UseQtSql "Using QtSql Library" OFF)
set(UseQtGui "Using QtGui Library" ON)
set(UseQtCore "Using QtCore Library" ON)
set(UseQtCharts "Using QtCharts Library" OFF)
set(UseQtWidgets "Using QtWidgets Library" ON)
set(UseQtNetwork "Using QtNetwork Library" OFF)
set(UseQtSerialPort "Using QtSerialPort Library" OFF)
set(UseQtConcurrent "Using QtConcurrent Library" OFF)
set(UseQtCore5Compat "Using QtCore5Compat Library" OFF)
set(UseQtOpenGLWidgets "Using QtOpenGLWidgets Library" OFF)
set(UseQtUiPlugin "Using QtUiPlugin Library" ON)

set(QtLibs)
set(CMAKE_AUTOUIC ON)
set(CMAKE_AUTORCC ON)
set(CMAKE_AUTOMOC ON)

if (UseQtCharts)
    add_compile_definitions(UseQtCharts)
    find_package(Qt6 COMPONENTS Charts REQUIRED)
    list(APPEND QtLibs Qt::Charts)
    message(STATUS "UseQtCharts ON")
else()
    message(STATUS "UseQtCharts OFF")
endif()

if (UseQtSql)
    add_compile_definitions(UseQtSql)
    find_package(Qt6 COMPONENTS Sql REQUIRED)
    list(APPEND QtLibs Qt::Sql)
    message(STATUS "UseQtSql ON")
else()
    message(STATUS "UseQtSql OFF")
endif()

if (UseQtGui)
    add_compile_definitions(UseQtGui)
    find_package(Qt6 COMPONENTS Gui REQUIRED)
    list(APPEND QtLibs Qt::Gui)
    message(STATUS "UseQtGui ON")
else()
    message(STATUS "UseQtGui OFF")
endif()

if (UseQtCore)
    add_compile_definitions(UseQtCore)
    find_package(Qt6 COMPONENTS Core REQUIRED)
    list(APPEND QtLibs Qt::Core)
    message(STATUS "UseQtCore ON")
else()
    message(STATUS "UseQtCore OFF")
endif()

if (UseQtWidgets)
    add_compile_definitions(UseQtWidgets)
    find_package(Qt6 COMPONENTS Widgets REQUIRED)
    list(APPEND QtLibs Qt::Widgets)
    message(STATUS "UseQtWidgets ON")
else()
    message(STATUS "UseQtWidgets OFF")
endif()

if (UseQtNetwork)
    add_compile_definitions(UseQtNetwork)
    find_package(Qt6 COMPONENTS Network REQUIRED)
    list(APPEND QtLibs Qt::Network)
    message(STATUS "UseQtNetwork ON")
else()
    message(STATUS "UseQtNetwork OFF")
endif()

if (UseQtSerialPort)
    add_compile_definitions(UseQtSerialPort)
    find_package(Qt6 COMPONENTS SerialPort REQUIRED)
    list(APPEND QtLibs Qt::SerialPort)
    message(STATUS "UseQtSerialPort ON")
else()
    message(STATUS "UseQtSerialPort OFF")
endif()

if (UseQtConcurrent)
    add_compile_definitions(UseQtConcurrent)
    find_package(Qt6 COMPONENTS Concurrent REQUIRED)
    list(APPEND QtLibs Qt::Concurrent)
    message(STATUS "UseQtConcurrent ON")
else()
    message(STATUS "UseQtConcurrent OFF")
endif()

if (UseQtCore5Compat)
    add_compile_definitions(UseQtCore5Compat)
    find_package(Qt6 COMPONENTS Core5Compat REQUIRED)
    list(APPEND QtLibs Qt::Core5Compat)
    message(STATUS "UseQtCore5Compat ON")
else()
    message(STATUS "UseQtCore5Compat OFF")
endif()

if (UseQtOpenGLWidgets)
    add_compile_definitions(UseQtOpenGLWidgets)
    find_package(Qt6 COMPONENTS OpenGLWidgets REQUIRED)
    list(APPEND QtLibs Qt::OpenGLWidgets)
    message(STATUS "UseQtOpenGLWidgets ON")
else()
    message(STATUS "UseQtOpenGLWidgets OFF")
endif()

if (UseQtUiPlugin)
    add_compile_definitions(UseQtUiPlugin)
    find_package(Qt6 COMPONENTS UiPlugin REQUIRED)
    list(APPEND QtLibs Qt::UiPlugin)
    message(STATUS "UseQtUiPlugin ON")
else()
    message(STATUS "UseQtUiPlugin OFF")
endif()
